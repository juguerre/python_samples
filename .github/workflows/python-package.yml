name: Python package

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12", "3.13", "3.14"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Setup uv
      uses: astral-sh/setup-uv@v7.1.0

    - name: Install dependencies
      run: uv sync --all-extras

    - name: Build package
      run: uv build

  test:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]  # Test with the minimum supported version

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Setup uv
      uses: astral-sh/setup-uv@v7.1.0

    - name: Install package and test dependencies
      run: |
        uv sync --all-extras

    - name: Run tests with pytest
      run: uv run python -m pytest -v --cov=samples --cov-report=term-missing --cov-report=xml

    - name: Upload coverage to Codecov
      if: github.event_name != 'pull_request'
      uses: codecov/codecov-action@v3
      continue-on-error: true
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        flags: unittests
        env_vars: OS,PYTHON
        name: codecov-umbrella
        fail_ci_if_error: false